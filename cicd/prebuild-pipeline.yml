parameters:
- name: downloadedModelDirectory
  displayName: Directory to download model to
  type: string
- name: publishedModelArtifactsName
  displayName: Name under which to publish the model artifacts for use within the pipeline
  type: string


jobs:
  - template: templates/code-quality-security-checks.yml
    parameters:
      repoName: self
      pipAuditArgs: ""

  - job: Test
    displayName: Test model and API

    steps:
      - checkout: self

#      - task: DownloadPipelineArtifact@2
#        displayName: Download model artifact
#        inputs:
#          source: current
#          artifact: $(publishedModelArtifactsName)
#          path: $(Build.SourcesDirectory)/$(downloadedModelDirectory)

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          addToPath: true
          architecture: 'x64'

      - task: CmdLine@2
        displayName: Install poetry packages
        inputs:
          script: |
            python3 -m pip install --upgrade pip
            python3 -m pip install --user pipx
            python3 -m pipx ensurepath
            pipx install poetry
            export PATH="/root/.local/bin:$PATH"
            poetry config virtualenvs.create false

            poetry update --no-ansi --no-interaction
            poetry install --no-ansi --no-interaction --no-root
            poetry build

      - task: CmdLine@2
        displayName: Run tests
        inputs:
          script: |
            export PATH="/root/.local/bin:$PATH"
            poetry run pytest tests/ --junitxml=junit/test-results.xml --cov=. --cov-report=xml

      - task: PublishTestResults@2
        displayName: Publish test results
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: "**/test-*.xml"
          testRunTitle: "Publish test results for Python $(python.version)"