[project]
name = "objectherkenning_openbare_ruimte"
version = "0.1.9"

[tool.poetry]
name = "objectherkenning_openbare_ruimte"
version = "0.1.9"
description = "Objectherkenning Openbare Ruimte is a project about recognising objects from public space images."
authors = [
    "Sebastian Davrieux <s.davrieux@amsterdam.nl>",
    "Diana Epureanu <d.epureanu@amsterdam.nl>",
    "Andrea Lombardo <a.lombardo@amsterdam.nl>",
    "Daan Bloembergen <d.bloembergen@amsterdam.nl>"
]

[tool.poetry.dependencies]
python = "~3.12"
aml_interface = { git = "https://github.com/Computer-Vision-Team-Amsterdam/AML-Interface.git", tag = "v1.1.2" }
azure-ai-ml = {version = "^1.2.0", source = "PyPI"}
azure-storage-blob = {version = "^12.19.0", source = "PyPI"}
cvtoolkit = { git = "https://github.com/Computer-Vision-Team-Amsterdam/CVToolkit.git", tag = "v2.0.3" }
mldesigner = {version = "^0.1.0-beta.9", source = "PyPI"}
numpy = {version = "^1.24.2", source = "PyPI"}
opencv-python = {version = "^4.8.0.74", source = "PyPI"}
pandas = {version = "^2.0.3", source = "PyPI"}
pathvalidate = {version = "^3.2.0", source = "PyPI"}
py360convert-modified = {version = "^1.0.1", source = "PyPI"}
pycocotools = {version = "^2.0.7", source = "PyPI"}
torch = {version = "^2.2.1", source="torch"}
torchaudio = {version = "^2.2.1", source="torch"}
torchvision = {version = "^0.17.1", source="torch"}
ultralytics = {version = "^8.2.76", source = "PyPI"}
wandb = {version = ">0.17.5", source = "PyPI"}
yolo_model_development_kit = { git = "https://github.com/Computer-Vision-Team-Amsterdam/YOLO-model-development-kit.git", tag = "v1.1.1" }

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry.dev-dependencies]
folium = {version = "^0.17.0", source = "PyPI"}
geopandas = {version = "~0.13.2", source = "PyPI"}
ipykernel = {version = "^6.29.4", source = "PyPI"}
matplotlib = {version = "^3.9.2", source = "PyPI"}
mapclassify = {version = "^2.8.1", source = "PyPI"}
nbstripout = {version = "^0.7.1", source = "PyPI"}
pandas-stubs = {version = "2.0.*", source = "PyPI"}
pre-commit = {version = "^3.2.0", source = "PyPI"}
pytest = {version = "^7.0.1", source = "PyPI"}
pytest-cov = {version = "^4.0.0", source = "PyPI"}
safety = {version = "^3.2.4", source = "PyPI"}

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
